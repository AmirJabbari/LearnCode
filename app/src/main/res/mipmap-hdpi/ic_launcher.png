/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.gms.googleservices;

import com.google.common.base.Charsets;
import com.google.common.base.Strings;
import com.google.common.io.Files;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;

import org.gradle.api.DefaultTask;
import org.gradle.api.GradleException;
import org.gradle.api.Project;
import org.gradle.api.artifacts.Configuration;
import org.gradle.api.artifacts.ConfigurationContainer;
import org.gradle.api.artifacts.Dependency;
import org.gradle.api.artifacts.DependencySet;
import org.gradle.api.resources.TextResource;
import org.gradle.api.tasks.Input;
import org.gradle.api.tasks.InputFile;
import org.gradle.api.tasks.Optional;
import org.gradle.api.tasks.OutputDirectory;
import org.gradle.api.tasks.TaskAction;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/** */
public class GoogleServicesTask extends DefaultTask {

  private static final String STATUS_DISABLED = "1";
  private static final String STATUS_ENABLED = "2";

  private static final String OAUTH_CLIENT_TYPE_WEB = "3";

  private static final Pattern GOOGLE_APP_ID_REGEX =
      Pattern.compile("(\\d+):(\\d+):(\\p{Alnum}+):(\\p{XDigit}+)");
  private static final String GOOGLE_APP_ID_VERSION = "1";

  /**
   * The input is not technically optional but we want to control the error message.
   * Without @Optional, Gradle will complain itself the file is missing.
   */
  @InputFile @Optional public File quickstartFile;

  @OutputDirectory public File intermediateDir;

  @Input public String packageNameXOR1;
  
  @Input public TextResource packageNameXOR2;

  @Input public String searchedLocation;

  @TaskAction
  public void action() throws IOException {
    if (!quickstartFile.isFile()) {
      throw new GradleException(
          String.format(
              "File %s is missing. "
                  + "The Google Services Plugin cannot function without it. %n Searched Location: %s",
              quickstartFile.getName(), searchedLocation));
    }

    getProject().getLogger().warn("Parsing json file: " + quickstartFile.getPath());

    // delete conten